apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
      name: proxy
    spec:
      ports:
        - name: "8000"
          port: 8000
          targetPort: 8000
      selector:
        io.kompose.service: proxy
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: app
      name: app
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: app
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: app
        spec:
          containers:
            - env:
                - name: ALLOWED_HOSTS
                - name: DB_HOST
                  value: db
                - name: DB_NAME
                - name: DB_PASS
                - name: DB_USER
                - name: SECRET_KEY
              image: app
              name: app
              imagePullPolicy: Never
              resources: {}
              volumeMounts:
                - mountPath: /vol/web
                  name: static-data
          restartPolicy: Always
          volumes:
            - name: static-data
              persistentVolumeClaim:
                claimName: static-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: static-data
      name: static-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: db
      name: db
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: db
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: db
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                - name: POSTGRES_PASSWORD
                - name: POSTGRES_USER
              image: postgres:13-alpine
              imagePullPolicy: Never
              name: db
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgres-data
          restartPolicy: Always
          volumes:
            - name: postgres-data
              persistentVolumeClaim:
                claimName: postgres-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: postgres-data
      name: postgres-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
        kompose.version: 1.26.1 (a9d05d509)
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
      name: proxy
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: proxy
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f docker-compose-deploy.yml -o kube-deploy.yml
            kompose.version: 1.26.1 (a9d05d509)
          creationTimestamp: null
          labels:
            io.kompose.service: proxy
        spec:
          containers:
            - env:
                - name: APP_PORT
                  value: "9000"
                - name: LISTEN_PORT
                  value: "8000"
              image: proxy
              imagePullPolicy: Never
              name: proxy
              ports:
                - containerPort: 8000
              resources: {}
              volumeMounts:
                - mountPath: /vol/static
                  name: static-data
          restartPolicy: Always
          volumes:
            - name: static-data
              persistentVolumeClaim:
                claimName: static-data
    status: {}
kind: List
metadata: {}

